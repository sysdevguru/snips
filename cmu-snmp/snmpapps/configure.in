dnl
dnl Generic Autoconf configure input script, V2
dnl
dnl Major changes:
dnl
dnl   V1 -> V2:		libtool support
dnl
dnl $Id: configure.in,v 1.14 1998/09/19 22:28:41 ryan Exp $
dnl

dnl
dnl ------------------------- Instructions -------------------------
dnl

dnl 1)  Add this to your collection
dnl 2)  Make sure you use my Makefile V2
dnl 3)  Run 'libtoolize -c' in the src directory, to copy libtool info
dnl 4)  Instead of putting object files for your libraries in the Makefile,
dnl     place them in this file (see LIBOBJS=)

dnl
dnl ------------------------- Setup -------------------------
dnl

dnl A file from the distribution
AC_INIT(snmpstatus.c)

dnl
dnl ------------------------- Checks for programs -------------------------
dnl

dnl --- mkdirhier?
dnl
AC_PATH_PROG(MKDIRHIER,mkdirhier)
if test "z${MKDIRHIER}" = "z"; then
AC_PATH_PROG(mkdir_path,mkdir)
MKDIRHIER="${mkdir_path} -p"
fi
AC_MSG_RESULT([using ${MKDIRHIER}])
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB
AM_PROG_LIBTOOL

dnl Find perl
AC_PATH_PROG(PERL,perl5)
if test "z${PERL}" = "z"; then
AC_PATH_PROG(PERL,perl)
fi
if test "z${PERL}" = "z"; then
AC_MSG_WARN([Unable to locate perl.  Manpages will not be generated.])
PERL=echo
fi
AC_SUBST(PERL)

dnl --------------------------------------------------------------------


dnl
dnl Irix ABI checking, by Rob Earhart <earhat+@cmu.edu>
dnl

mips_abi=32
AC_ARG_WITH(mips_abi,
[  --with-mips-abi=abi     ABI to use for IRIX (32, n32, or 64)],[
mips_abi="$withval"
])

ABILIBDIR=
case "${mips_abi}" in
        32) abi='-32'; ABILIBDIR=''     ;;
       o32) abi='-32'; ABILIBDIR=''     ;;
       n32) abi='-n32'; ABILIBDIR='32'  ;;
        64) abi='-64'; ABILIBDIR='64'   ;;
         *) AC_ERROR("Invalid ABI specified") ;;
esac

case `uname` in
IRIX)
	AC_MSG_RESULT([IRIX:  Compiling ${abi}])
        CFLAGS="${abi} ${CFLAGS}"
	LDFLAGS="${abi} ${LDFLAGS}"
	;;
*)
	;;
esac

dnl This updates the Makefile(s), if they care.
AC_SUBST(ABILIBDIR)

dnl
dnl ------------------------- Checks for headers -------------------------
dnl

dnl
dnl Checks for header files.
dnl
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/file.h sys/ioctl.h sys/time.h syslog.h memory.h)
AC_CHECK_HEADERS(sys/sockio.h stdlib.h unistd.h utmpx.h)

dnl
dnl Checks for typedefs, structures, and compiler characteristics.
dnl
AC_TYPE_OFF_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl
dnl -------------------- Checks for library functions --------------------
dnl
AC_CHECK_FUNCS(gettimeofday select socket strdup getutent)

dnl
dnl ------------------------- Checks for libraries -------------------------
dnl

dnl The order of these checks are very important.  All libs must NOT
dnl depend on multiple libs not in the link line yet.

dnl For example, if you use the CMU SNMP Libray, it contains references
dnl to calls in -lsocket and -lnsl.  But, if you add the -lsnmp to LIBS
dnl first, the future check for -lsocket will fail, due to unreferenced
dnl symbols in -lnsl.

dnl First, let's look for -lsocket and -lnsl.

dnl
dnl	The order here is important, so that they end up in the right
dnl	order in the command line generated by make.  Here are some
dnl	special considerations:

dnl	1. Use "connect" and "accept" to check for -lsocket, and
dnl	   "gethostbyname" to check for -lnsl.

dnl	2. Use each function name only once:  can't redo a check because
dnl#	   autoconf caches the results of the last check and won't redo it.

dnl	3. Use -lnsl and -lsocket only if they supply procedures that
dnl	   aren't already present in the normal libraries.  This is because
dnl	   IRIX 5.2 has libraries, but they aren't needed and they're
dnl	   bogus:  they goof up name resolution if used.

dnl	4. On some SVR4 systems, can't use -lsocket without -lnsl too.
dnl	   To get around this problem, check for both libraries together
dnl	   if -lsocket doesn't work by itself.

snmpapps_checkBoth=0
SYS_NETLIBS=""

AC_CHECK_FUNC(connect, snmpapps_checkSocket=0, snmpapps_checkSocket=1)
if test "$snmpapps_checkSocket" = 1; then
  AC_CHECK_LIB(socket, main, SYS_NETLIBS="-lsocket", snmpapps_checkBoth=1)
fi
if test "$snmpapps_checkBoth" = 1; then
  SYS_NETLIBS="-lsocket -lnsl"
  AC_CHECK_FUNC(accept, snmpapps_checkNsl=0, )
else

  dnl Only get here if we still need to check just -lnsl

  AC_CHECK_FUNC(gethostbyname, snmpapps_checkNsl=0, snmpapps_checkNsl=1)
  if test "$snmpapps_checkNsl" = 1; then
    AC_CHECK_LIB(nsl, main, [SYS_NETLIBS="$SYS_NETLIBS -lnsl"])
  fi
fi
AC_MSG_CHECKING([for system network libs])
AC_MSG_RESULT([using $SYS_NETLIBS])
LIBS="$LIBS $SYS_NETLIBS"

dnl
dnl -------------------- Check for installed packages --------------------
dnl

dnl
dnl SNMP Library
dnl
AC_MSG_CHECKING([for CMU SNMP])
AC_ARG_WITH(snmp, [  --with-snmp              CMU SNMP libraries located in (val)], SNMP_DIR="$withval", SNMP_DIR=no)

if test "${SNMP_DIR}" != "no" &&
	( test -f $SNMP_DIR/lib${ABILIBDIR}/libsnmp.a ||
	   test -f $SNMP_DIR/lib${ABILIBDIR}/libsnmp.so ||
	   test -f $SNMP_DIR/lib${ABILIBDIR}/libsnmp.so.1 ) &&
   test -f $SNMP_DIR/include/snmp/snmp.h; then
     SNMP_DIR="$SNMP_DIR"
elif test -d /usr/local &&
	( test -f /usr/local/lib${ABILIBDIR}/libsnmp.a ||
	   test -f /usr/local/lib${ABILIBDIR}/libsnmp.so ||
	   test -f /usr/local/lib${ABILIBDIR}/libsnmp.so.1 ) &&
   test -f /usr/local/include/snmp/snmp.h; then
     SNMP_DIR="/usr/local"

elif test -d /usr/contributed &&
	( test -f /usr/contributed/lib${ABILIBDIR}/libsnmp.a ||
	   test -f /usr/contributed/lib${ABILIBDIR}/libsnmp.so ||
	   test -f /usr/contributed/lib${ABILIBDIR}/libsnmp.so.1 ) &&
   test -f /usr/contributed/include/snmp/snmp.h; then
     SNMP_DIR="/usr/contributed"

else
  AC_MSG_ERROR([Could not locate CMU SNMP Libraries!])
fi

LIBS="${LIBS} -L$SNMP_DIR/lib${ABILIBDIR} -lsnmp"
INCS="${INCS} -I$SNMP_DIR/include"

# Use libtool
RUNPATH="-rpath $SNMP_DIR/lib${ABILIBDIR}"
AC_MSG_RESULT([found in $SNMP_DIR])

dnl --------------------------------------------------------------------

dnl Substitute the major variables

AC_SUBST(INCS)
AC_SUBST(LIBS)
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(RUNPATH)

dnl --------------------------------------------------------------------

dnl Uptime 
if test -f /proc/uptime; then
  AC_DEFINE(HAVE_PROC_UPTIME)
fi

dnl --------------------------------------------------------------------

dnl
dnl Write output
dnl
AC_CONFIG_HEADER(config.h)
AC_OUTPUT(Makefile)
